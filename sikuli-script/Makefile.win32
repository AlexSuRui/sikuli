# Usage: nmake -f Makefile.win32

unexport MAKGFLAGS

CLASSES_TARGET_PATH=target/classes
CLASSPATH=../lib/mx-native-loader-1.2/target/classes\;../lib/jython-2.5.1.jar

NATIVE_SRC_PATH=src/main/native
NATIVE_TARGET_PATH=target/lib

JAR_PATH=target/jar
JAR_DLL_PATH=$(JAR_PATH)/META-INF/lib

DLLS=$(NATIVE_TARGET_PATH)/*.dll
INCLUDE_LIB_PATH=../lib/mx-native-loader-1.2/target/classes
LIB_PATH=../../../lib
JYTHON_SRC_PATH=src/main/python/sikuli

default: java dll jar

$(CLASSES_TARGET_PATH):
	mkdir $(CLASSES_TARGET_PATH)

$(NATIVE_TARGET_PATH):
	mkdir $(NATIVE_TARGET_PATH)

java: $(CLASSES_TARGET_PATH)
	javac -sourcepath src/main/java/edu/mit/csail/uid -d $(CLASSES_TARGET_PATH) -cp $(CLASSPATH) src/main/java/edu/mit/csail/uid/*.java

dll: $(NATIVE_TARGET_PATH)
	@echo "to build dlls, type make-win32.bat in $(NATIVE_SRC_PATH) manually!!!!!!!!"
	#cd $(NATIVE_SRC_PATH); ./make-win32.bat; cd ../../..

$(JAR_PATH):
	mkdir $(JAR_PATH)

$(JAR_DLL_PATH):
	mkdir -p $(JAR_DLL_PATH)

prepare-jar: $(JAR_PATH) $(JAR_DLL_PATH) 
	cp $(DLLS) $(JAR_DLL_PATH)
	cp -rf $(CLASSES_TARGET_PATH)/* $(JAR_PATH)
	mkdir -p $(JAR_PATH)/META-INF
	cp -rf $(NATIVE_TARGET_PATH) $(JAR_PATH)/META-INF
	cp -rf $(INCLUDE_LIB_PATH)/* $(JAR_PATH) 
	cd $(JAR_PATH); jar xf $(LIB_PATH)/jython-2.5.1.jar 
	mkdir -p $(JAR_PATH)/Lib
	cp -rf $(JYTHON_SRC_PATH) $(JAR_PATH)/Lib/
	cd $(JAR_PATH)/Lib; unzip -qn ../$(LIB_PATH)/jython-lib-2.5.1.zip

jar: prepare-jar
	cp $(DLLS) ../lib/win32
	cd $(JAR_PATH); jar cfm $(LIB_PATH)/sikuli-script.jar ../MANIFEST.txt *

update-dll:
	cd $(JAR_PATH); jar cfm $(LIB_PATH)/sikuli-script.jar ../MANIFEST.txt META-INF

